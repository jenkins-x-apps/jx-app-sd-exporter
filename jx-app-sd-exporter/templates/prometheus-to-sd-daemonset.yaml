apiVersion: extensions/v1beta1
kind: DaemonSet
metadata:
  name: prometheus-to-sd
  labels:
    chart: "{{ .Chart.Name }}-{{ .Chart.Version | replace "+" "_" }}"
spec:
  selector:
    matchLabels:
      chart: "{{ .Chart.Name }}-{{ .Chart.Version | replace "+" "_" }}"
  template:
    metadata:
      labels:
        chart: "{{ .Chart.Name }}-{{ .Chart.Version | replace "+" "_" }}"
    spec:
      containers:
      - name: prometheus-to-sd
        image: "{{ .Values.prometheusToStackdriver.image.repository }}:{{ .Values.prometheusToStackdriver.image.tag }}"
        imagePullPolicy: "{{ .Values.prometheusToStackdriver.image.pullPolicy }}"
        command:
        - /monitor
        - --source=node:http://$(METRICS_ADDRESS)?whitelisted=conntrack_entries,conntrack_error_count,num_inuse_sockets,num_tw_sockets,socket_memory&metricsPrefix=kubernetes.io/internal/net/cluster
        - --source=kube-proxy:http://localhost:10249?whitelisted=sync_proxy_rules_latency_microseconds&metricsPrefix=kubernetes.io/internal/addons
        - --source=kubelet:http://localhost:10255?whitelisted=docker_operations,docker_operations_errors,runtime_operations,runtime_operations_errors,runtime_operations_latency_microseconds,pleg_relist_latency_microseconds,pod_start_latency_microseconds,rest_client_requests_total,storage_operation_duration_seconds,storage_operation_errors_total,run_podsandbox_duration_seconds,run_podsandbox_errors_total,storage_operation_status_count
        - --source=kubelet:http://localhost:10255/metrics/probes?whitelisted=prober_probe_total&podIdLabel=pod&namespaceIdLabel=namespace&containerNameLabel=container
        - --api-override=https://monitoring.googleapis.com/
        - --monitored-resource-type-prefix=k8s_
        - --node-name=$(NODE_NAME)
        - --stackdriver-prefix={{ .Values.prometheusToStackdriver.stackdriverMetricsPrefix }}
        - --monitored-resource-labels=location={{ .Values.cluster.location }}
        - --export-interval={{ .Values.prometheusToStackdriver.exportInterval }}
{{- if .Values.targetProjectId }}
        - --project-id={{ .Values.targetProjectId }}
{{- end }}
{{- if .Values.cluster.zone }}
        - --zone-override={{ .Values.cluster.zone }}
{{- end }}
{{- if .Values.cluster.name }}
        - --cluster-name={{ .Values.cluster.name }}
{{- end }}
{{- if .Values.cluster.location }}
        - --cluster-location={{ .Values.cluster.location }}
{{- end }}
        env:
        - name: NODE_NAME
          valueFrom:
            fieldRef:
              fieldPath: spec.nodeName
        - name: METRICS_ADDRESS
          valueFrom:
            configMapKeyRef:
              key: metrics_address
              name: networking-metrics-config
        resources:
          limits:
            cpu: "{{ .Values.prometheusToStackdriver.resources.limits.cpu }}"
            memory: "{{ .Values.prometheusToStackdriver.resources.limits.memory }}"
          requests:
            cpu: "{{ .Values.prometheusToStackdriver.resources.requests.cpu }}"
            memory: "{{ .Values.prometheusToStackdriver.resources.requests.memory }}"
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
      dnsPolicy: ClusterFirst
      hostNetwork: true
      nodeSelector:
        beta.kubernetes.io/os: linux
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext: {}
      serviceAccount: prometheus-to-sd
      serviceAccountName: prometheus-to-sd
      terminationGracePeriodSeconds: 30
  updateStrategy:
    rollingUpdate:
      maxUnavailable: 1
    type: RollingUpdate
